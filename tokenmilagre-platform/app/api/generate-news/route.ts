import { NextResponse } from 'next/server';
import { promises as fs } from 'fs';
import path from 'path';

export const runtime = 'nodejs';
export const dynamic = 'force-dynamic';
export const maxDuration = 60;

interface NewsItem {
  title: string;
  summary: string;
  url: string;
  source: string;
  publishedAt: string;
  category: string[];
  sentiment: 'positive' | 'neutral' | 'negative';
  keywords: string[];
}

// T√≥picos para gerar artigos
const CRYPTO_TOPICS = [
  'Bitcoin price analysis and market trends',
  'Ethereum latest updates and upgrades',
  'Solana ecosystem developments',
  'DeFi protocols and innovations',
  'NFT market trends and sales',
  'Crypto regulation news',
  'Blockchain technology advances',
  'Altcoin market analysis'
];

export async function POST(request: Request) {
  try {
    const { count = 6 } = await request.json();

    console.log(`ü§ñ Gerando ${count} novos artigos com IA...`);

    const newArticles: NewsItem[] = [];

    // Selecionar t√≥picos aleat√≥rios
    const selectedTopics = CRYPTO_TOPICS.sort(() => 0.5 - Math.random()).slice(0, count);

    for (const topic of selectedTopics) {
      // Aqui vamos usar o Gemini MCP para gerar artigos reais
      // Por enquanto, vou criar uma estrutura que voc√™ pode integrar com MCP

      const article = await generateArticleWithAI(topic);
      if (article) {
        newArticles.push(article);
      }
    }

    // Ler artigos existentes
    const newsFilePath = path.join(process.cwd(), 'data', 'news.json');
    let existingNews: NewsItem[] = [];

    try {
      const fileContent = await fs.readFile(newsFilePath, 'utf-8');
      existingNews = JSON.parse(fileContent);
    } catch (error) {
      console.log('Criando novo arquivo de not√≠cias...');
    }

    // Adicionar novos artigos no in√≠cio
    const updatedNews = [...newArticles, ...existingNews].slice(0, 50); // Manter apenas 50 artigos

    // Salvar artigos atualizados
    await fs.writeFile(newsFilePath, JSON.stringify(updatedNews, null, 2), 'utf-8');

    console.log(`‚úÖ ${newArticles.length} artigos gerados e salvos com sucesso!`);

    return NextResponse.json({
      success: true,
      message: `${newArticles.length} artigos gerados com sucesso`,
      articles: newArticles,
      total: updatedNews.length
    });

  } catch (error) {
    console.error('Erro ao gerar artigos:', error);
    return NextResponse.json(
      { success: false, error: 'Erro ao gerar artigos' },
      { status: 500 }
    );
  }
}

// Fun√ß√£o para gerar artigo com IA (integrar com Gemini MCP)
async function generateArticleWithAI(topic: string): Promise<NewsItem | null> {
  try {
    // TODO: Integrar com Gemini MCP aqui
    // const geminiResponse = await callGeminiMCP(topic);

    // Por enquanto, gerar baseado em padr√µes
    const templates = {
      'Bitcoin': {
        titles: [
          'Bitcoin ultrapassa marca hist√≥rica de ${price} com aumento de volume',
          'An√°lise t√©cnica: Bitcoin forma padr√£o de alta para pr√≥xima semana',
          'Institui√ß√µes aumentam posi√ß√µes em Bitcoin em ${percent}%',
        ],
        sources: ['CoinDesk', 'Cointelegraph', 'Bitcoin Magazine'],
        url: 'https://cointelegraph.com',
        category: ['Bitcoin', 'An√°lise'],
        sentiment: 'positive' as const,
      },
      'Ethereum': {
        titles: [
          'Ethereum: Pr√≥xima atualiza√ß√£o promete reduzir taxas de gas em ${percent}%',
          'DApps na Ethereum crescem ${percent}% em volume de transa√ß√µes',
          'Desenvolvedores anunciam roadmap atualizado para Ethereum 2.0',
        ],
        sources: ['Ethereum Foundation', 'The Block', 'Decrypt'],
        url: 'https://ethereum.org',
        category: ['Ethereum', 'Tecnologia'],
        sentiment: 'positive' as const,
      },
      'Solana': {
        titles: [
          'Solana DeFi TVL atinge novo recorde de ${amount} bilh√µes',
          'Novos protocolos escolhem Solana pela velocidade e baixo custo',
          'Ecossistema Solana cresce ${percent}% em desenvolvedores ativos',
        ],
        sources: ['Solana Foundation', 'DeFi Llama', 'CoinDesk'],
        url: 'https://solana.com',
        category: ['Solana', 'DeFi'],
        sentiment: 'positive' as const,
      },
      'DeFi': {
        titles: [
          'Protocolos DeFi registram ${amount} bilh√µes em valor bloqueado',
          'Nova plataforma DeFi oferece ${percent}% de APY em staking',
          'An√°lise: DeFi est√° moldando o futuro das finan√ßas',
        ],
        sources: ['DeFi Pulse', 'The Block', 'CryptoQuant'],
        url: 'https://defillama.com',
        category: ['DeFi', 'An√°lise'],
        sentiment: 'positive' as const,
      },
      'NFT': {
        titles: [
          'Cole√ß√£o de NFTs bate recorde com venda de ${amount} milh√µes',
          'Mercado de NFTs mostra sinais de recupera√ß√£o com volume crescente',
          'Artista digital revoluciona mercado com nova cole√ß√£o NFT',
        ],
        sources: ['OpenSea', 'Nifty Gateway', 'SuperRare'],
        url: 'https://opensea.io',
        category: ['NFTs', 'Arte'],
        sentiment: 'positive' as const,
      },
      'Regula√ß√£o': {
        titles: [
          'SEC anuncia novas diretrizes para exchanges de criptomoedas',
          'Europa avan√ßa com framework regulat√≥rio MiCA para crypto',
          'Banco Central estuda regulamenta√ß√£o de stablecoins',
        ],
        sources: ['SEC', 'Reuters', 'Bloomberg Crypto'],
        url: 'https://sec.gov',
        category: ['Regula√ß√£o', 'Pol√≠tica'],
        sentiment: 'neutral' as const,
      }
    };

    // Detectar categoria do t√≥pico
    let selectedTemplate = templates['Bitcoin'];
    if (topic.toLowerCase().includes('ethereum')) selectedTemplate = templates['Ethereum'];
    else if (topic.toLowerCase().includes('solana')) selectedTemplate = templates['Solana'];
    else if (topic.toLowerCase().includes('defi')) selectedTemplate = templates['DeFi'];
    else if (topic.toLowerCase().includes('nft')) selectedTemplate = templates['NFT'];
    else if (topic.toLowerCase().includes('regulation')) selectedTemplate = templates['Regula√ß√£o'];

    // Gerar valores aleat√≥rios
    const price = (Math.random() * 50000 + 50000).toFixed(0);
    const percent = (Math.random() * 30 + 10).toFixed(1);
    const amount = (Math.random() * 20 + 5).toFixed(1);

    // Selecionar t√≠tulo aleat√≥rio e substituir vari√°veis
    const titleTemplate = selectedTemplate.titles[Math.floor(Math.random() * selectedTemplate.titles.length)];
    const title = titleTemplate
      .replace('${price}', price)
      .replace('${percent}', percent)
      .replace('${amount}', amount);

    // Gerar resumo
    const summary = `An√°lise completa sobre ${topic}. Especialistas apontam tend√™ncias positivas no mercado, com crescimento consistente nos √∫ltimos dias. Investidores institucionais demonstram interesse renovado.`;

    const article: NewsItem = {
      title,
      summary: summary.substring(0, 200),
      url: selectedTemplate.url,
      source: selectedTemplate.sources[Math.floor(Math.random() * selectedTemplate.sources.length)],
      publishedAt: new Date().toISOString(),
      category: selectedTemplate.category,
      sentiment: selectedTemplate.sentiment,
      keywords: extractKeywords(title + ' ' + summary)
    };

    return article;

  } catch (error) {
    console.error('Erro ao gerar artigo:', error);
    return null;
  }
}

function extractKeywords(text: string): string[] {
  const keywords = new Set<string>();
  const commonWords = ['bitcoin', 'ethereum', 'solana', 'defi', 'nft', 'sec', 'regula√ß√£o', 'an√°lise', 'mercado', 'crypto'];

  const words = text.toLowerCase().split(/\s+/);

  for (const word of words) {
    for (const keyword of commonWords) {
      if (word.includes(keyword)) {
        keywords.add(keyword.charAt(0).toUpperCase() + keyword.slice(1));
      }
    }
  }

  // Adicionar keywords espec√≠ficas
  if (text.includes('ETF')) keywords.add('ETF');
  if (text.includes('TVL')) keywords.add('TVL');
  if (text.includes('APY')) keywords.add('APY');
  if (text.includes('staking')) keywords.add('Staking');
  if (text.includes('upgrade')) keywords.add('Upgrade');

  return Array.from(keywords).slice(0, 5);
}
